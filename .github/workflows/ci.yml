name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 mypy requests
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Type check with mypy
      run: |
        mypy api/ --ignore-missing-imports
        
    - name: Test API endpoints
      run: |
        # Start the API server in background
        python api/main.py &
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8001/api/health || exit 1
        
        # Test search endpoint
        curl -f "http://localhost:8001/api/search?q=test" || exit 1
        
        # Test domains endpoint
        curl -f http://localhost:8001/api/domains || exit 1
        
    - name: Test quality validation
      run: |
        python scripts/validate_quality.py --dry-run
        
    - name: Test performance
      run: |
        python scripts/test_performance.py --timeout 30
        
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t search-engine .
        
    - name: Test Docker container
      run: |
        # Run container in background
        docker run -d -p 8001:8001 --name test-search search-engine
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8001/api/health || exit 1
        
        # Test search endpoint
        curl -f "http://localhost:8001/api/search?q=test" || exit 1
        
        # Cleanup
        docker stop test-search
        docker rm test-search 